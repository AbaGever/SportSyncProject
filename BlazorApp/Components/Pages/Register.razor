@page "/r"
@using MySql.Data.MySqlClient;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@using Models2
@using DBL2
@using Microsoft.JSInterop
@inject IJSRuntime JS
<HeadContent>
    <!-- Basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Site Metas -->
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SportSync</title>
    <link rel="icon" href="/download.png">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins">

    <!-- slider stylesheet -->
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">

    <!-- bootstrap core css -->
    <link rel="stylesheet" type="text/css" href="homepage/css/bootstrap.css">

    <!-- fonts style -->
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,600,700&amp;display=swap" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="homepage/css/style.css" rel="stylesheet">
    <!-- responsive style -->
    <link href="homepage/css/responsive.css" rel="stylesheet">
</HeadContent>
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg custom_nav-container ">
                <a class="navbar-brand" href="/">
                    <span>
                        SportSync
                    </span>
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <div class="d-flex ml-auto flex-column flex-lg-row align-items-center">
                        <ul class="navbar-nav  ">
                            <li class="nav-item active">
                                <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
                            </li>


                            <li class="nav-item">
                                <a class="nav-link" href="/r">Sign Up</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/login">Log In</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" href="/p">Your Profile</a>
                            </li>


                        </ul>
                        <div class="user_option">
                            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">
                                <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>
                            </form>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    <section class=" slider_section position-relative">
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="container">
                        <div class="col-lg-10 col-md-11 mx-auto">
                            <div class="detail-box">
                                <div>
                                    <h1>Register</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="wrapper">
        <div class="title-text">
            <div class="title Trainer">
                Trainer
            </div>
            <div class="title Coach">
                Coach
            </div>
        </div>
        <div class="form-container">
            <div class="slide-controls">
                <input type="radio" name="slide" id="Trainer" checked>
                <input type="radio" name="slide" id="Coach">
                <label for="Trainer" class="slide Trainer">Trainer</label>
                <label for="Coach" class="slide Coach">Coach</label>
                <div class="slider-tab"></div>
            </div>
            <div class="form-inner">
                <form action="#" class="Trainer">
                    <div class="field">
                        <input @bind-value="cus.firstName" type="text" Placeholder="Enter First Name" required />

                    </div>
                    <div class="field">
                        <input @bind-value="cus.lastName" type=" text" Placeholder="Enter Last Name" required />
                    </div>
                    <div class="field">
                        <input @bind-value="cus.emailaddress" type="email" Placeholder="Enter Email Address " required />
                    </div>
                    <div class="field">
                        <input @bind-value="cus.phonenumber" type="text" Placeholder="Enter Phone Number" required />
                    </div>
                    <div class="field">
                        <input @bind-value="cus.password" type="password" Placeholder="Enter Password" required />
                    </div>
                    <div class="field btn">
                        <div class="btn-layer"></div>
                        <input @onclick="RegTrainer" type="submit" value="Sign Up" class="submit">Sign Up</input>
                    </div>

                </form>
                <form action="#" class="Coach">
                    <div class="field">
                        <input @bind-value="coach.firstName" type="text" Placeholder="Enter First Name" required />

                    </div>
                    <div class="field">
                        <input @bind-value="coach.lastName" type=" text" Placeholder="Enter Last Name" required />
                    </div>
                    <div class="field">
                        <input @bind-value="coach.emailaddress" type="email" Placeholder="Enter Email Address " required />
                    </div>
                    <div class="field">
                        <input @bind-value="coach.phonenumber" type="text" Placeholder="Enter Phone Number " required />
                    </div>
                    <div class="field">
                        <input @bind-value="coach.sport" type="text" Placeholder="Enter Sport " required />
                    </div>
                    <div class="field">
                        <input @bind-value="coach.exp" type="text" Placeholder="Enter Years Of Experience" required />
                    </div>
                    <div class="field">
                        <input @bind-value="coach.password" type="password" Placeholder="Enter Password" required />
                    </div>
                    <div class="field btn">
                        <div class="btn-layer"></div>
                        <input @onclick="RegCoach" type="submit" value="Sign Up" class="submit">Sign Up</input>
                    </div>
                </form>
            </div>
        </div>
    </div>

<script>
    function triggerAnimation() {
    const loginText = document.querySelector(".title-text .Trainer");
    const loginForm = document.querySelector("form.Trainer");
    const loginBtn = document.querySelector("label.Trainer");
    const signupBtn = document.querySelector("label.Coach");
    const signupLink = document.querySelector("form .Coach-link a");
    signupBtn.onclick = (()=>{
      loginForm.style.marginLeft = "-50%";
      loginText.style.marginLeft = "-50%";
    });
    loginBtn.onclick = (()=>{
      loginForm.style.marginLeft = "0%";
      loginText.style.marginLeft = "0%";
    });
    }
</script>

<style>
    import url('https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap');
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    html, body {
        height: 100%;
        width: 100%;
        place-items: center;
        background: -webkit-linear-gradient(bottom, #E0DCC8, #FFBF00);
    }

    ::selection {
        background: Grey;
        color: #fff;
    }

    .wrapper {
        overflow: hidden;
        margin:auto ;
        max-width: 500px;
        background: #fff;
        padding: 30px;
        border-radius: 5px;
        box-shadow: 0px 15px 20px rgba(0,0,0,0.1);
    }

        .wrapper .title-text {
            display: flex;
            width: 200%;
        }

        .wrapper .title {
            width: 50%;
            font-size: 35px;
            font-weight: 600;
            text-align: center;
            transition: all 0.6s cubic-bezier(0.68,-0.55,0.265,1.55);
        }

        .wrapper .slide-controls {
            position: relative;
            display: flex;
            height: 50px;
            width: 100%;
            overflow: hidden;
            margin: 30px 0 10px 0;
            justify-content: space-between;
            border: 1px solid lightgrey;
            border-radius: 5px;
        }

    .slide-controls .slide {
        height: 100%;
        width: 100%;
        color: #fff;
        font-size: 18px;
        font-weight: 500;
        text-align: center;
        line-height: 48px;
        cursor: pointer;
        z-index: 1;
        transition: all 0.6s ease;
    }

    .slide-controls label.Coach {
        color: #000;
    }

    .slide-controls .slider-tab {
        position: absolute;
        height: 100%;
        width: 50%;
        left: 0;
        z-index: 0;
        border-radius: 5px;
        background: -webkit-linear-gradient(left, white,Grey,Grey,white);
        transition: all 0.6s cubic-bezier(0.68,-0.55,0.265,1.55);
    }

    input[type="radio"] {
        display: none;
    }

    #Coach:checked ~ .slider-tab {
        left: 50%;
    }

    #Coach:checked ~ label.Coach {
        color: #fff;
        cursor: default;
        user-select: none;
    }

    #Coach:checked ~ label.Trainer {
        color: #000;
    }

    #Trainer:checked ~ label.Coach {
        color: #000;
    }

    #Trainer:checked ~ label.Trainer {
        cursor: default;
        user-select: none;
    }

    .wrapper .form-container {
        width: 100%;
        overflow: hidden;
    }

    .form-container .form-inner {
        display: flex;
        width: 200%;
    }

        .form-container .form-inner form {
            width: 50%;
            transition: all 0.6s cubic-bezier(0.68,-0.55,0.265,1.55);
        }

    .form-inner form .field {
        height: 50px;
        width: 100%;
        margin-top: 20px;
    }

        .form-inner form .field input {
            height: 100%;
            width: 100%;
            outline: none;
            padding-left: 15px;
            border-radius: 5px;
            border: 1px solid lightgrey;
            border-bottom-width: 2px;
            font-size: 17px;
            transition: all 0.3s ease;
        }

            .form-inner form .field input:focus {
                border-color: #FFBF00;
                /* box-shadow: inset 0 0 3px #fb6aae; */
            }

            .form-inner form .field input::placeholder {
                color: #999;
                transition: all 0.3s ease;
            }

    form .field input:focus::placeholder {
        color: #b3b3b3;
    }

    .form-inner form .pass-link {
        margin-top: 5px;
    }

    .form-inner form .Coach-link {
        text-align: center;
        margin-top: 30px;
    }

        .form-inner form .pass-link a,
        .form-inner form .Coach-link a {
            color: #fa4299;
            text-decoration: none;
        }

            .form-inner form .pass-link a:hover,
            .form-inner form .Coach-link a:hover {
                text-decoration: underline;
            }

    form .btn {
        height: 50px;
        width: 100%;
        border-radius: 5px;
        position: relative;
        overflow: hidden;
    }

        form .btn .btn-layer {
            height: 100%;
            width: 300%;
            position: absolute;
            left: -100%;
            background: -webkit-linear-gradient(right,#E0DCC8,#FFBF00,#E0DCC8,#FFBF00);
            border-radius: 5px;
            transition: all 0.4s ease;
            ;
        }

        form .btn:hover .btn-layer {
            left: 0;
        }

        form .btn input[type="submit"] {
            height: 100%;
            width: 100%;
            z-index: 1;
            position: relative;
            background: none;
            border: none;
            color: #fff;
            padding-left: 0;
            border-radius: 5px;
            font-size: 20px;
            font-weight: 500;
            cursor: pointer;
        }
</style>













@* 
<div class="cont">
    <div class="form sign-in">
        <h2>Welcome Trainer</h2>
        <label>
            <span>First Name</span>
            <input @bind-value="cus.firstName" type="text" required />
        </label>
        <label>
            <span>Last Name</span>
            <input @bind-value="cus.lastName" type=" text" required />
        </label>
        <label>
            <span>Email</span>
            <input @bind-value="cus.emailaddress" type="email" required />
        </label>
        <label>
            <span>Phone Number</span>
            <input @bind-value="cus.phonenumber" type="text" required />
        </label>
        <label>
            <span>Password</span>
            <input @bind-value="cus.password" type="password" required />
        </label>
        <button @onclick="RegTrainer" type="button" class="submit">Sign Up</button>

    </div>
    <div class="sub-cont">
        <div class="img">
            <div class="img__text m--up">

                <h3>Are you a Coach?</h3>
            </div>
            <div class="img__text m--in">

                <h3>Are you a Trainer?</h3>
            </div>
            <div class="img__btn">
                <span class="m--up">Sign Up Here</span>
                <span class="m--in">Sign Up Here</span>
            </div>
        </div>
        <div class="form sign-up">
            <h2>Create your Account</h2>
            <label>
                <span>First Name</span>
                <input @bind-value="coach.firstName" type="text" required />
            </label>
            <label>
                <span>Last Name</span>
                <input @bind-value="coach.lastName" type=" text" required />
            </label>
            <label>
                <span>Email</span>
                <input @bind-value="coach.emailaddress" type="email" required />
            </label>
            <label>
                <span>Phone Number</span>
                <input @bind-value="coach.phonenumber" type="text" required />
            </label>
            <label>
                <span>Sport</span>
                <input @bind-value="coach.sport" type="text" required />
            </label>
            <label>
                <span>Experience</span>
                <input @bind-value="coach.exp" type="int" required />
            </label>
            <label>
                <span>Password</span>
                <input @bind-value="coach.password" type="password" required />
            </label>
            <button @onclick="RegCoach" type="button" class="submit">Sign Up</button>

        </div>
    </div>
</div>

<script>
    document.querySelector('.img__btn').addEventListener('click', function () {
        document.querySelector('.cont').classList.toggle('s--signup');
    });
</script>


*@


















@code {
    private bool isFirstRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender || !isFirstRender)
        {
            // Call your JavaScript function to trigger the animation
            await JS.InvokeVoidAsync("triggerAnimation");

            isFirstRender = false;  // Prevent animation from firing on subsequent renders
        }
    }
    Trainer cus = new Trainer();
    TrainerDB db = new TrainerDB();
    Coach coach = new Coach();
    CoachDB dbc = new CoachDB();
    bool b;
    async Task RegTrainer()
    {
        b = await db.insertuser(cus);
        navigationManager.NavigateTo("/");
    }
    async Task RegCoach()
    {
        b = await dbc.insertcoach(coach);
        navigationManager.NavigateTo("/");
    }
}
