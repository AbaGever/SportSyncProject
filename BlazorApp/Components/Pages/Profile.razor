@page "/p"
@using Models2
@using DBL2
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IJSRuntime js

@if (c != null || coach != null)
{
    <section class="py-1">
        <div class="container px-4 px-lg-5 my-5">
            <div class="row gx-4 gx-lg-5 align-items-center">

                @if (c != null)
                {

                    <br />
                    <div class="col-md-6">
                        <h1 class="display-5 fw-bolder">@c.firstName   @c.lastName</h1>
                        <strong>
                            <h2> Email: @c.emailaddress </h2>
                            @if (!showPass)
                            {
                                <h2>  Password: @password </h2>
                                string tmp1 = "Show new Password ";
                                @tmp1 <input type="checkbox" name="mycheckbox1" id="upd_user_check1" @onclick=" ShowPass" />
                                <br>
                            }
                            else
                            {
                                <h2>  Password: @c.password </h2>
                                string tmp1 = "Show new Password ";
                                @tmp1 <input type="checkbox" name="mycheckbox1" id="upd_user_check1" checked="checked" @onclick="ShowPass" />
                                <br>
                            }
                            @if (c.groupname != "")
                            {
                                <h2> Group Name :<a href="ShowG/@c.groupname">@c.groupname</a></h2>
                            }


                            <h2>Date Joined : @c.datejoined</h2>
                            <h3>
                                Phone Number : @c.phonenumber
                                @if (c.isadmin == "true")
                                {
                                    <h3>Admin</h3>
                                    <a href="/ShowU">View All Users</a>
                                }

                            </h3>

                        </strong>
                        <div>
                        </div>
                    </div>

                    <div>
                        <h1 class="h3 mb-3 font-weight-normal">Edit Yourself</h1>
                        <label for="inputName" class="sr-only">Name</label>
                        <input @bind-value="Name" type="text" class="form-control m-1" placeholder="Name">

                        <label for="inputEmail" class="sr-only">Email address</label>
                        <input @bind-value="Email" type="text" class="form-control m-1" placeholder="Email">

                        <label class="sr-only">Password</label>
                        <input @bind-value="Password" type="text" class="form-control m-1" placeholder="Password">

                        <button @onclick="doEditUser" class="btn btn-lg btn-primary btn-block m-1">Update</button>
                        <div> <br /> <br /> </div>
                    </div>
                }
                else
                {
                    <br />
                    <div class="col-md-6">
                        <h1 class="display-5 fw-bolder">@coach.firstName   @coach.lastName</h1>
                        <strong>
                            <h2>
                                Email: @coach.emailaddress
                            </h2>
                            @if (!showPass)
                            {
                                <h2>  Password: @password </h2>
                                string tmp1 = "Show new Password ";
                                @tmp1 <input type="checkbox" name="mycheckbox1" id="upd_user_check1" @onclick=" ShowPass" />
                                <br>
                            }
                            else
                            {
                                <h2>  Password: @coach.password </h2>
                                string tmp1 = "Show new Password ";
                                @tmp1 <input type="checkbox" name="mycheckbox1" id="upd_user_check1" checked="checked" @onclick="ShowPass" />
                                <br>
                            }
                            <h2>
                                Sport: @coach.sport<br />Experience: @coach.exp
                            </h2>
                            @if (coach.groupname != "")
                            {
                                <h2> Group Name :<a href="ShowG/@coach.groupname">@coach.groupname</a></h2>
                            }
                            <h3>
                                Phone Number : @coach.phonenumber


                            </h3>

                        </strong>
                        <div>
                        </div>
                    </div>

                    <div>
                        <h1 class="h3 mb-3 font-weight-normal">Edit Yourself</h1>
                        <label for="inputName" class="sr-only">Name</label>
                        <input @bind-value="Name" type="text" class="form-control m-1" placeholder="Name">

                        <label for="inputEmail" class="sr-only">Email address</label>
                        <input @bind-value="Email" type="text" class="form-control m-1" placeholder="Email">

                        <label class="sr-only">Password</label>
                        <input @bind-value="Password" type="text" class="form-control m-1" placeholder="Password">
                        <button @onclick="doEditCoach" class="btn btn-lg btn-primary btn-block m-1" type="submit">Update</button>

                        <div> <br /> <br /> </div>
                    </div>
                }
                <button style="background-color:darkred;padding:30px 40px" @onclick="Logout" class="btn btn-lg btn-primary btn-block m-1">Log out of your Account</button>



            </div>
        </div>
    </section>

}
@code {
    private string Name = "";
    private string Email = "";
    private string Password = "";
    private string password = "*******";
    bool showPass = false;

    Trainer c = null;
    Coach coach = null;
    TrainerDB userDB = new TrainerDB();
    void ShowPass()
    {
        showPass = !showPass;
    }
    bool CoachorUser(Trainer c, Coach ch)
    {
        if (c == null && ch != null)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {


            var name = await MySession.GetAsync<Trainer>("Trainer");
            if (name.Success)
            {
                c = name.Value;
                StateHasChanged();
            }


            var name1 = await MySession.GetAsync<Coach>("Coach");
            if (name1.Success)
            {
                coach = name1.Value;
                StateHasChanged();
            }



            if (c == null && coach == null)
            {
                navigationManager.NavigateTo("/login");
            }

        }
    }
    async Task doEditUser()
    {

        if (Name == "")
        {
            Name = c.firstName;
        }
        if (Email == "")
        {
            Email = c.emailaddress;
        }
        if (password == "")
        {
            password = c.password;
        }

        c.firstName = Name;
        c.emailaddress = Email;
        c.password = Password;
        c.id = c.id;


        int n = await userDB.UpdateAsync(c);
        if (n > 0)
        {
            await js.InvokeVoidAsync("alert", $"Updated Successfully!");
            await MySession.SetAsync("Trainer", c);
            var name = await MySession.GetAsync<Trainer>("Trainer");
            if (name.Success)
            {
                c = name.Value;
                StateHasChanged();
            }

        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Update failed!");



        }

    }
    async Task doEditCoach()
    {
        CoachDB CoachDB = new CoachDB();

        if (Name == "")
        {
            Name = coach.firstName;
        }
        if (Email == "")
        {
            Email = coach.emailaddress;
        }
        if (password == "")
        {
            password = coach.password;
        }

        coach.firstName = Name;
        coach.emailaddress = Email;
        coach.password = Password;
        coach.id = coach.id;


        int n = await CoachDB.UpdateAsync(coach);
        if (n > 0)
        {
            await js.InvokeVoidAsync("alert", $"Updated Successfully!");
            await MySession.SetAsync("Coach", coach);
            var name = await MySession.GetAsync<Coach>("Coach");
            if (name.Success)
            {
                coach = name.Value;
                StateHasChanged();
            }
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Update failed!");
        }
    }
    async Task Logout()
    {
        await MySession.SetAsync("Trainer", null);
        await MySession.SetAsync("Coach", null);
        navigationManager.NavigateTo("");
    }

}
