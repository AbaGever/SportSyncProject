@page "/"
@using Models2;
@using DBL2;
@inject IJSRuntime js
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager




<!-- Navigation bar with social media icons -->
<!-- w3-content defines a container for fixed size centered content,
and is wrapped around the whole page content, except for the footer in this example -->
<div class="container" style="color:white" >

    <video autoplay muted loop class="video-bg" >
        <source src="joni2.mp4" type="video/mp4" />

    </video>
        <center>
            <div class="content">

                <h1> <b>SportSync</b></h1>
                <h6>The project involves developing a scheduling and training management system designed for both amateur and professional athletes. The system is intended to streamline the management of users' workout routines by offering a tool that allows the creation of personalized schedules, tailored to the fitness level, type of sport, and the athlete's specific requirements.</h6>
            </div>
                @if (UserS == null && coach != null && coach.groupname == "" || coach != null && coach.groupname == null || coach != null && group.coachid != coach.id)
                {
                <a href="sag" class="button">Sign A Group</a>
                }
                else if (coach != null && coach.groupname != "" && coach.groupname != null)
                {
                <a href="ShowG/@(coach.groupname)" class="button">Show Group Info</a>
                }

        </center>
    
</div>


@code {
    Trainer UserS = null;
    Coach coach = null;
    Group group = new Group();
    GroupDB groupDB = new GroupDB();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user1 = await MySession.GetAsync<Trainer>("Trainer");
            if (user1.Success)
            {
                UserS = user1.Value;
                StateHasChanged();
            }
            var user2 = await MySession.GetAsync<Coach>("Coach");
            if (user2.Success)
            {
                coach = user2.Value;
                if (coach == null)
                {
                    group = null;
                }
                else
                {
                    group = await groupDB.SelectByPkAsync(coach.groupname);
                }
                StateHasChanged();
            }
            else
            {
                if (UserS == null && coach == null && group == null)
                {
                    navigationManager.NavigateTo("/");
                }
            }
        }

    }

}

